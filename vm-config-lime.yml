---
- hosts: all
  become: true
  vars:
    devices:
      - { device: '/dev/sdb', mount: '/var/lib/mysql', temp_mount: '/mnt/mysql' }
      - { device: '/dev/sdc', mount: '/var/log', temp_mount: '/mnt/log' }
      - { device: '/dev/sdd', mount: '/home', temp_mount: '/mnt/home' }
      - { device: '/dev/sde', mount: '/home/Lime', temp_mount: '/mnt/lime' }
      - { device: '/dev/sdf', mount: '/home/backup', temp_mount: '/mnt/backup' }
  tasks:
    - name: Create ext4 filesystem on devices
      command: mkfs.ext4 {{ item.device }}
      loop: "{{ devices }}"
      loop_control:
        label: "{{ item.device }}"

    - name: Create temporary mount points
      file:
        path: "{{ item.temp_mount }}"
        state: directory
      loop: "{{ devices }}"

    - name: Mount devices to temporary mount points
      mount:
        path: "{{ item.temp_mount }}"
        src: "{{ item.device }}"
        fstype: ext4
        state: mounted
      loop: "{{ devices }}"

    - name: Synchronize directories
      command: rsync -a "{{ item.mount }}/." "{{ item.temp_mount }}"
      loop: "{{ devices }}"

    - name: Unmount original directories if they are mount points
      command: umount "{{ item.mount }}"
      when: ansible_mounts | selectattr('mount', 'equalto', item.mount) | list | count > 0
      loop: "{{ devices }}"

    - name: Update /etc/fstab
      shell: echo "UUID=$(blkid -s UUID -o value {{ item.device }}) {{ item.mount }} ext4 defaults 0 0" >> /etc/fstab
      loop: "{{ devices }}"

    - name: Mount devices to final mount points
      mount:
        path: "{{ item.mount }}"
        src: "{{ item.device }}"
        fstype: ext4
        state: mounted
      loop: "{{ devices }}"